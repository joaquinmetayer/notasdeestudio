Arrays (matrices/arreglos)

Array lo podemos ver como un lugar en donde almacenar una o mas variables dentro de un mismo lugar

Usamos las []
Const nombreEstudiantes = ['Martin', 'Juan', 'Pepe']

Si uso el string .legth me arroja la cantidad de elementos que contiene el array

Console.log(nombreEstudiantes.legth); 
//3


Acceso a elementos de una matriz

Cada elemento es enumerado a partir del 0

Console.log(nombreEstudiantes[1];
//'Juan'

Si uso el -1 accedo al ultimo elemento

Console.log(nombreEstudiantes[-1];
//'Pepe'

return array[array.length - 1];


Assignation

Podemos asignar y resignar cualquier indicio en la matriz usando paréntesis/indice y un =

nombreEstudiantes[0] = 'Joaquin';

console.log(nombreEstudiantes);
// ['Joaquin', 'Juan', 'Pepe']



.push y .pop

Push agrega al final
Pop quita al final

.unshift y .shift

Unshift agrega al principio
Shif eleminia al principio

nombreEstudiantes.shift();



Puedo contener multiples tipos elementos dentro de una matriz


Utilizando bucles for en arrays

Const nombresEstudiantes = ['Joaquin', 'Juan', 'Pepe'];

For (let I = 0; I < nombresEstudiantes.legth; i++) {
Console.log(nombreEstudiantes[i]);
}

// 'Joaquin'
// 'Juan'
// 'Pepe'



.chartAt()

Este método retorna un string especifico en la posición que le indique 

Ej
String = 'Hola';
String.chartAt(0);
// H


Statement break / continue


function empiezaConNueve(n) {
  //Desarrolle una función que recibe como parámetro un número entero n. Debe retornar true si el entero 
  //inicia con 9 y false en otro caso.
  //Escribe tu código aquí
  let num = n.toString()
  if(num.charAt(0) === "9"){
    return true
  }
  return false
}

function todosIguales(arreglo) {
  //Escriba la función todosIguales, que indique si todos los elementos de un arreglo son iguales:
  //retornar true, caso contrario retornar false.
  //Escribe tu código aquí  
  for (var i =0 ; i < arreglo.length - 1; i++) {
    if(arreglo[i] !== arreglo[i+1]){
      return false
    }
  }
  return true
} 

function mesesDelAño(array) {
  //Dado un array que contiene algunos meses del año desordenados, recorrer el array buscando los meses de 
  // "Enero", "Marzo" y "Noviembre", guardarlo en nuevo array y retornarlo.
  //Si alguno de los meses no está, devolver: "No se encontraron los meses pedidos"
  // Tu código:
  var nuevoArray = [];
  for(let i= 0; i< array.length; i++) {
    if(array[i] === "Enero" || array[i] === "Marzo" || array[i] === "Noviembre") {
      nuevoArray.push(array[i]);
    }
  }
  if(nuevoArray.length < 3) {
    return "No se encontraron los meses pedidos";
  }
  else {
      return nuevoArray;
  }
}

function breakStatement(numero) {
  //Iterar en un bucle aumentando en 2 el numero recibido hasta un límite de 10 veces.
  //Guardar cada nuevo valor en un array. 
  //Devolver el array
  //Si en algún momento el valor de la suma y la cantidad de iteraciones coinciden, debe interrumpirse la ejecución y 
  //devolver: "Se interrumpió la ejecución"
  //Pista: usá el statement 'break'
  // Tu código:
  var array = [];
  var suma = numero;
  for(var i= 0; i<10; i++) {
    suma = suma + 2;
    if(suma === i) break;
    else {
      array.push(suma);
    }
  }
  if(i < 10) {
    return 'Se interrumpió la ejecución';
  }
  else {
      return array;
  }
}

function continueStatement(numero) {
  //Iterar en un bucle aumentando en 2 el numero recibido hasta un límite de 10 veces.
  //Guardar cada nuevo valor en un array.    
  //Devolver el array
  //Cuando el número de iteraciones alcance el valor 5, no se suma en ese caso y se continua con la siguiente iteración
  //Pista: usá el statement 'continue'
  // Tu código:
  var array = [];
  var suma = numero;
  for(var i= 0; i<10; i++) {
    if(i === 5) continue;
    else {
      suma = suma + 2;
      array.push(suma);
    }
  }
  return array;
}


