/*
Propiedad display

es importante para el posicionamiento en css la usamos para controlar como se muestra el contenido en los elementos que estan alrededor de este y como se comportan en la pantallas

div {
    display: <valor de la propiedad;
}

elementos block
arranca en nueva linea y siempre tomara el ancho que se le de en el contenedor
div p

elementos inline
solo tomare el espacio que necesite
span a img

none es que no deja rastro
y hidden es cuando deja el lugar pero no se ve nada
display: none;
visibility: hidden;

flex 
grid 

la propiedad position

div {
    position: <valor de la propiedad>;
}

static
como su nombre lo dice, estatico, nada lo afecta ni aun asi le coloque propiedades con top left etc

relative
se mantendra como si fuese static pero nos permitira usar otros metodos de posicionamiento de elementos

fixed
definir un objeto fijo pero en la pantalla, se quedara ahi aun asi scroleemos

absolute
similar a static/relative solo que se mantiene estatico dependiendo de su contenedor

abrolute                  relative
desde posicion padre      desde contenedor

propiedades de position

top, left, rigth u bottom

div {
    position: fixed;
    top: 0;
    left: 0;
}

flexbox

aspectos basicos:

display: flex e inline-flex
esto hace que elemento sea "flex block"

justufy content:   y  align items
alineacion en fila / alineacion en columna
sus tipos...

center

flex-start, se mostraran los elementos al comienzo del elemento

flex-end, al final

space-between, agrega espacio de forma uniforme entre los elementos pero no coloca espaco "afuera"

space-arround, similar a space between pero aplic atambien margenes afuera, o sea en todos lsdos de forma uniforme en su contenedor


flex direction

row
es la ubicacion por defecto

column
esto pone todo en columna

row-reverse 
espejea / invierte la direccion de JC (justify-content) de derecha a izquierda

colum-reverse
invierte AI (align-items) de abajo hacia arriba


align-seflr
me permite alinear un solo elemento


recursos adicionales
https://flexboxfroggy.com/
https://css-tricks.com/snippets/css/a-guide-to-flexbox/
/*